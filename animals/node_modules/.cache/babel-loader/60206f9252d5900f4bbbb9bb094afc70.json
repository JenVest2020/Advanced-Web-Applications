{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jennifer\\\\Documents\\\\LambdaSchool\\\\ptUnit9ADVwebApp\\\\Advanced-Web-Applications\\\\animals\\\\src\\\\components\\\\AnimalForm.js\";\nimport React, { useState } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nconst initialAnimal = {\n  name: '',\n  sound: '',\n  classification: {\n    species: ''\n  }\n};\nexport default function AnimalForm({\n  animals,\n  updateAnimals\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [animalToUpdate, setAnimalToUpdate] = useState(initialAnimal);\n\n  const editAnimal = animal => {\n    setUpdating(true);\n    setAnimalToUpdate(animal);\n  };\n\n  const saveUpdate = e => {\n    e.preventDefault(); // How can we update the animal information?\n    // Where can we get the ID? \n    // Where is the information stored?\n\n    axiosWithAuth().put(`animals/${animalToUpdate.id}`, animalToUpdate).then(res => {\n      console.log('from AF: update successful: res', res.data);\n      setDepend;\n    }).catch(err => console.error('from AF: update failed: err', err.message));\n  };\n\n  const deleteAnimal = animal => {// How can we delete an animal?\n  };\n\n  return React.createElement(\"div\", {\n    className: \"animals-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"organized\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, animals.map(animal => React.createElement(\"li\", {\n    key: animal.name,\n    onClick: () => editAnimal(animal),\n    className: \"edit-animals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => {\n      e.stopPropagation();\n      deleteAnimal(animal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"X\"), \" \", animal.name)))), updating && React.createElement(\"form\", {\n    onSubmit: saveUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Update Animal\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    onChange: e => setAnimalToUpdate({ ...animalToUpdate,\n      name: e.target.value\n    }),\n    value: animalToUpdate.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Sound:\", React.createElement(\"input\", {\n    onChange: e => setAnimalToUpdate({ ...animalToUpdate,\n      sound: e.target.value\n    }),\n    value: animalToUpdate.sound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Classification:\", React.createElement(\"input\", {\n    onChange: e => setAnimalToUpdate({ ...animalToUpdate,\n      classification: {\n        species: e.target.value\n      }\n    }),\n    value: animalToUpdate.classification.species,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Update\"), React.createElement(\"button\", {\n    onClick: () => setUpdating(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["C:/Users/Jennifer/Documents/LambdaSchool/ptUnit9ADVwebApp/Advanced-Web-Applications/animals/src/components/AnimalForm.js"],"names":["React","useState","axiosWithAuth","initialAnimal","name","sound","classification","species","AnimalForm","animals","updateAnimals","updating","setUpdating","animalToUpdate","setAnimalToUpdate","editAnimal","animal","saveUpdate","e","preventDefault","put","id","then","res","console","log","data","setDepend","catch","err","error","message","deleteAnimal","map","stopPropagation","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\r\n\r\nconst initialAnimal = {\r\n    name: '',\r\n    sound: '',\r\n    classification: { species: '' }\r\n}\r\n\r\nexport default function AnimalForm({ animals, updateAnimals }) {\r\n\r\n    const [updating, setUpdating] = useState(false);\r\n    const [animalToUpdate, setAnimalToUpdate] = useState(initialAnimal);\r\n\r\n    const editAnimal = animal => {\r\n        setUpdating(true);\r\n        setAnimalToUpdate(animal);\r\n    }\r\n\r\n    const saveUpdate = e => {\r\n        e.preventDefault();\r\n        // How can we update the animal information?\r\n        // Where can we get the ID? \r\n        // Where is the information stored?\r\n        axiosWithAuth()\r\n            .put(`animals/${animalToUpdate.id}`, animalToUpdate)\r\n            .then(res => {\r\n                console.log('from AF: update successful: res', res.data)\r\n                setDepend\r\n            })\r\n            .catch(err => console.error('from AF: update failed: err', err.message))\r\n    }\r\n\r\n    const deleteAnimal = animal => {\r\n        // How can we delete an animal?\r\n    }\r\n\r\n    return (\r\n        <div className=\"animals-list\">\r\n            <ul className=\"organized\">\r\n                {animals.map(animal => (\r\n                    <li key={animal.name} onClick={() => editAnimal(animal)} className=\"edit-animals\">\r\n                        <span>\r\n                            <span onClick={e => {\r\n                                e.stopPropagation();\r\n                                deleteAnimal(animal)\r\n                            }\r\n                            } >\r\n                                X\r\n                            </span>{\" \"}\r\n                            {animal.name}\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {updating && (\r\n                <form onSubmit={saveUpdate}>\r\n                    <legend>Update Animal</legend>\r\n                    <label>\r\n                        Name:\r\n                        <input\r\n                            onChange={e =>\r\n                                setAnimalToUpdate({ ...animalToUpdate, name: e.target.value })\r\n                            }\r\n                            value={animalToUpdate.name}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Sound:\r\n                        <input\r\n                            onChange={e =>\r\n                                setAnimalToUpdate({ ...animalToUpdate, sound: e.target.value })\r\n                            }\r\n                            value={animalToUpdate.sound}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Classification:\r\n                        <input\r\n                            onChange={e =>\r\n                                setAnimalToUpdate({\r\n                                    ...animalToUpdate,\r\n                                    classification: { species: e.target.value }\r\n                                })\r\n                            }\r\n                            value={animalToUpdate.classification.species}\r\n                        />\r\n                    </label>\r\n                    <div>\r\n                        <button type=\"submit\">Update</button>\r\n                        <button onClick={() => setUpdating(false)}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}